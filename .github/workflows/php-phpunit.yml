name: PHP Unit

on:
  workflow_call:
    secrets:
      COMPOSER_TOKEN:
        required: false
        description: 'composer token'
    inputs:
      COMPOSER_ARG:
         required: false
         type: string
         description: 'PHP version'
         default: 'install'
      PHP_VERSION:
        required: false
        type: string
        description: 'PHP version'
        default: '8.1'
      PHP_EXTENSIONS:
        required: false
        type: string
        description: 'A list of PHP extensions to install'
        default: 'mbstring,sockets'
      PHP_INI_VALUES:
        required: false
        type: string
        description: 'PHP ini values'
        default: ''
      RUNS_ON:
        required: false
        type: string
        description: 'Runs on'
        default: 'ubuntu-latest'

jobs:
  phpunit:
    name: PHP Unit
    runs-on: ${{ inputs.RUNS_ON }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          ini-values: ${{ inputs.PHP_INI_VALUES }}
          php-version: ${{ inputs.PHP_VERSION }}
          extensions:  ${{ inputs.PHP_EXTENSIONS }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Configure composer token
        if: env.COMPOSER_TOKEN != ''
        env:
          COMPOSER_TOKEN: ${{ secrets.COMPOSER_TOKEN }}
        run: composer config github-oauth.github.com ${{ secrets.COMPOSER_TOKEN }}

      - name: Install dependencies
        run: composer ${{ inputs.COMPOSER_ARG }} --no-progress --prefer-dist --optimize-autoloader

      - name: Run phpunit
        run: composer phpunit
